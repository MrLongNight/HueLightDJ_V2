@page "/lightdj/{Id:guid}"
@using HueLightDJ.Services.Interfaces.Models.Requests;
@inject StorageService LocalStorageService
@inject ILightDJService LightDJService
@inject IHubService HubService
@inject NavigationManager NavManager

<MudText Typo="Typo.h3">@config?.Name</MudText>

<MudPaper Class="d-flex flex-row flex-grow-1 gap-4" Elevation="0">
  <MudText>Log msg:</MudText>
  <MudText>@lastMsg</MudText>
</MudPaper>


<MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="Connect">Connect</MudButton>

@if (statusModel.CurrentGroup != null) //statusModel.IsConnected
{
    <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="Disconnect">Disconnect</MudButton>

    <HueLightDJ.Blazor.Controls.Shared.Preview />

    <MudText Typo="Typo.h5">BPM</MudText>
    <MudNumericField @bind-Value="statusModel.Bpm" Label="BPM" Variant="Variant.Text" @onchange="@(() => LightDJService.SetBPM(new IntRequest(statusModel.Bpm)))" Min="1" Max="1000" />

    <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="(() => LightDJService.SetBPM(new IntRequest(120)))">Reset BPM</MudButton>
    <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="(() => LightDJService.SetBPM(new IntRequest(20)))">Slow</MudButton>
    <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="(() => LightDJService.SetBPM(new IntRequest(400)))">Quick</MudButton>
    <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="(() => LightDJService.SetBPM(new IntRequest(600)))">Super Quick</MudButton>
    <br />
    <br />

    <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="(() => LightDJService.StartRandom())">Random Effect</MudButton>

    @if (statusModel.IsAutoMode)
    {
        <MudCheckBox @bind-Checked="@statusModel.AutoModeHasRandomEffects" @onchange="@(() => LightDJService.SetAutoRandomMode(new BoolRequest(statusModel.AutoModeHasRandomEffects)))" Label="Random effects"></MudCheckBox>

        <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="(() => LightDJService.StopAutoMode())">Stop Auto Mode</MudButton>
    }
    else
    {
        <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="(() => LightDJService.StartAutoMode())">Start Auto Mode</MudButton>
    }
    <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="(() => LightDJService.StopEffects())">Stop All Effects</MudButton>
    <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="(() => LightDJService.Beat(new DoubleRequest(1)))">Beat</MudButton>

    <br />
    <br />

    <MudSlider Min="0" Max="100" ValueLabel="true" @bind-Value="@Brightness" @onchange="@(() => LightDJService.SetBri(new DoubleRequest(Brightness)))">Brightness</MudSlider>

    <MudText Typo="Typo.h5">Long Running</MudText>
    @foreach (var effectGroup in effectsVM.BaseEffects)
    {
        <MudPaper>
            <MudText Typo="Typo.h6">@effectGroup.Key</MudText>

            @foreach (var effect in effectGroup.Value)
            {
                <MudPaper Class="d-flex flex-row flex-grow-1 gap-4" Elevation="0">
                    <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="@(() => LightDJService.StartEffect(new StartEffectRequest { TypeName = effect.TypeName, ColorHex = effect.IsRandom ? null : effect.Color}))">@effect.Name</MudButton>

                    @if (effect.HasColorPicker)
                    {
                        <MudCheckBox @bind-Checked="@effect.IsRandom" Label="Random"></MudCheckBox>

                        @if (!effect.IsRandom)
                        {
                            <MudColorPicker PickerVariant="PickerVariant.Inline" @bind-Text="effect.Color" Style="@($"color: {effect.Color};")" />
                        }
                    }
                </MudPaper>
            }

        </MudPaper>
       <br />
    }

    <MudText Typo="Typo.h5">Short Effects</MudText>

    @foreach (var effect in effectsVM.ShortEffects)
    {
        <MudPaper Class="d-flex flex-row flex-grow-1 gap-4" Elevation="0">
            <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="@(() => LightDJService.StartEffect(new StartEffectRequest { TypeName = effect.TypeName, ColorHex = ""}))">@effect.Name</MudButton>
        </MudPaper>
    }

}

